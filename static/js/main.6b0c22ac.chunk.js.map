{"version":3,"sources":["components/WeatherIcon.js","components/MiniWeather.js","components/WeekHour.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherIcon","desc","icon","faSun","faCloudSun","faCloud","faCloudShowersHeavy","faCloudSunRain","faPooStorm","faSnowflake","faSmog","MiniWeather","elData","titleClass","temp","main","day","period","moment","unix","dt","format","weather","description","className","Math","floor","Week","containerClass","wrapperClass","viewName","currrentData","currentQuery","dataNumber","length","data","slice","map","el","apiKey","App","useState","query","setQuery","setWeather","weatherWeek","setWeatherWeek","weatherHour","setWeatherHour","getTime","now","utcOffset","timezone","getDate","time","setTime","date","timingInterval","setInterval","clearInterval","onKeyUp","e","key","fetch","then","res","json","list","lat","lon","v","daily","value","onChange","target","faSearch","name","temp_max","temp_min","WeekHour","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b0c22ac.chunk.js","sourcesContent":["import {\r\n    faSun,\r\n    faCloudSun,\r\n    faCloud,\r\n    faCloudShowersHeavy,\r\n    faCloudSunRain,\r\n    faPooStorm,\r\n    faSnowflake,\r\n    faSmog\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\n\r\nfunction WeatherIcon({ desc }) {\r\n    switch (desc) {\r\n        case \"clear sky\":\r\n            return <FontAwesomeIcon icon={faSun} />\r\n            break;\r\n        case \"few clouds\":\r\n            return <FontAwesomeIcon icon={faCloudSun} />\r\n            break;\r\n        case \"scattered clouds\":\r\n            return <FontAwesomeIcon icon={faCloud} />\r\n            break;\r\n        case \"broken clouds\":\r\n            return <FontAwesomeIcon icon={faCloud} />\r\n            break;\r\n        case \"shower rain\":\r\n            return <FontAwesomeIcon icon={faCloudShowersHeavy} />\r\n            break;\r\n        case \"rain\":\r\n            return <FontAwesomeIcon icon={faCloudSunRain} />\r\n            break;\r\n        case \"thunderstorm\":\r\n            return <FontAwesomeIcon icon={faPooStorm} />\r\n            break;\r\n        case \"snow\":\r\n            return <FontAwesomeIcon icon={faSnowflake} />\r\n            break;\r\n        case \"mist\":\r\n            return <FontAwesomeIcon icon={faSmog} />\r\n            break;\r\n        default:\r\n            return <FontAwesomeIcon icon={faCloud} />\r\n            break;\r\n    }\r\n};\r\n\r\nexport default WeatherIcon;","import moment from \"../../node_modules/moment\";\r\nimport WeatherIcon from \"./WeatherIcon\";\r\n\r\nfunction MiniWeather({ elData, titleClass }) {\r\n    const temp = typeof elData.main !== \"undefined\" ? elData.main.temp : elData.temp.day;\r\n    const period = titleClass === \"hours_title\" ? moment.unix(elData.dt).format('HH') : moment.unix(elData.dt).format('ddd');\r\n    return (\r\n        <div>\r\n            <h5>{period}</h5>\r\n            <WeatherIcon desc={elData.weather[0].description}></WeatherIcon>\r\n            <h5><span className=\"tempXs\">{Math.floor(temp)}</span></h5>\r\n        </div>\r\n    )\r\n}\r\nexport default MiniWeather;","import MiniWeather from './MiniWeather'\r\nfunction Week({ titleClass, containerClass, wrapperClass, viewName, currentQuery, currrentData }) {\r\n  const dataNumber = currrentData.length\r\n  const data = currrentData.slice(dataNumber-5)\r\n  return (\r\n    <div className={containerClass}>\r\n      <span className={titleClass}>{viewName}</span>\r\n      <span className={wrapperClass}>\r\n      {data.map((el) => {\r\n              return (\r\n                <MiniWeather titleClass={titleClass} key={el.dt} elData={el} ></MiniWeather>\r\n              )\r\n            })}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\nexport default Week;","import { useState } from \"react\"\nimport moment from 'moment'\nimport WeekHour from './components/WeekHour'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\n\n\nconst apiKey = \"8c1df0f9fe108f87ff658f63fc03d78a\";\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState('')\n  const [weatherWeek, setWeatherWeek] = useState()\n  const [weatherHour, setWeatherHour] = useState()\n  const getTime = () => {\n    let now;\n    if (typeof weather.main === \"undefined\") {\n      now = moment();\n    } else {\n      now = moment().utcOffset(weather.timezone / 60);\n    }\n    return `${now.format('HH:mm:ss')}`\n  }\n  const getDate = () => {\n    const now = moment();\n    return `${now.format('dddd')} ${now.format('MMMM')} ${now.format('d')}`\n  }\n  const [time, setTime] = useState()\n  const [date, setDate] = useState(getDate())\n\n  const timingInterval = setInterval(() => {\n    setTime(getTime(), getDate())\n    clearInterval(timingInterval);\n  }, 1000);\n\n  const getWeather = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&APPID=${apiKey}`)\n        .then(res => res.json())\n        .then((data) => {\n          setQuery(\"\");\n          setWeather(data);\n          setTime(getTime(), getDate())\n        })\n\n      fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${query}&units=metric&APPID=${apiKey}`)\n        .then(res => res.json())\n        .then((data) => {\n          setWeatherHour(data.list);\n        })\n\n        fetch(`https://nominatim.openstreetmap.org/search?q=${query}&format=json&polygon=1&addressdetails=1`)\n        .then(res => res.json())\n        .then((data) => {\n          return {lat:data[0].lat,lon:data[0].lon}\n        }).then(v=>{\n          fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${v.lat}&lon=${v.lon}&units=metric&appid=${apiKey}`)\n          .then(res => res.json())\n          .then((data) => {\n            setWeatherWeek(data.daily);\n          })\n        })\n    }\n  }\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 15) ? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div>\n          <div className=\"search_wrapper\">\n            <input\n              onKeyUp={getWeather}\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n            <FontAwesomeIcon icon={faSearch} />\n          </div>\n        </div>\n        {typeof weather.main !== \"undefined\" ? (\n          <div>\n            <div>\n              <h3>{weather.name}</h3>\n              <h1><span className=\"temp\">{Math.floor(weather.main.temp)}</span></h1>\n              <h5>{weather.weather[0].main}</h5>\n              <h4>{time}</h4>\n              <h4>{date}</h4>\n              <h5>H: {Math.floor(weather.main.temp_max)} L: {Math.floor(weather.main.temp_min)}</h5>\n            </div>\n          </div>\n        ) : (\n          <h2>search for location</h2>\n        )}\n\n\n        {typeof weatherHour !== \"undefined\" ? (\n         <WeekHour\n         currrentData={weatherHour}\n           containerClass=\"hours_container\"\n           titleClass=\"hours_title\"\n           wrapperClass=\"hours_wrapper\"\n           viewName=\"h o u r\"\n         ></WeekHour>\n        ) : (\n          <span></span>\n        )}\n\n{typeof weatherWeek !== \"undefined\" ? (\n           <WeekHour\n              containerClass=\"weekdays_container\"\n              titleClass=\"weekdays_title\"\n              wrapperClass=\"weekdays_wrapper\"\n              viewName=\"w e e k\"\n              currrentData={weatherWeek}\n            ></WeekHour>\n        ) : (\n          <span></span>\n        )}\n      </main>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}